type: edu
files:
- name: task.py
  visible: true
  placeholders:
  - offset: 930
    length: 31
    placeholder_text: TODO()
    initial_state:
      length: 6
      offset: 930
    initialized_from_dependency: false
    selected: true
    status: Unchecked
    encrypted_possible_answer: beam.io.ReadFromText(file_path)
  - offset: 969
    length: 29
    placeholder_text: TODO()
    initial_state:
      length: 6
      offset: 944
    initialized_from_dependency: false
    selected: true
    status: Unchecked
    encrypted_possible_answer: 'beam.Map(lambda country: country.upper())'
  text: |+
    #  Licensed to the Apache Software Foundation (ASF) under one
    #  or more contributor license agreements.  See the NOTICE file
    #  distributed with this work for additional information
    #  regarding copyright ownership.  The ASF licenses this file
    #  to you under the Apache License, Version 2.0 (the
    #  "License"); you may not use this file except in compliance
    #  with the License.  You may obtain a copy of the License at
    #
    #      http://www.apache.org/licenses/LICENSE-2.0
    #
    #  Unless required by applicable law or agreed to in writing, software
    #  distributed under the License is distributed on an "AS IS" BASIS,
    #  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    #  See the License for the specific language governing permissions and
    #  limitations under the License.

    import apache_beam as beam

    from log_elements import LogElements

    with beam.Pipeline() as p:

      file_path = 'countries.txt'

      (p | TODO()
         | TODO()
         | LogElements())

  learner_created: false
- name: tests.py
  visible: false
  text: |
    #  Licensed to the Apache Software Foundation (ASF) under one
    #  or more contributor license agreements.  See the NOTICE file
    #  distributed with this work for additional information
    #  regarding copyright ownership.  The ASF licenses this file
    #  to you under the Apache License, Version 2.0 (the
    #  "License"); you may not use this file except in compliance
    #  with the License.  You may obtain a copy of the License at
    #
    #      http://www.apache.org/licenses/LICENSE-2.0
    #
    #  Unless required by applicable law or agreed to in writing, software
    #  distributed under the License is distributed on an "AS IS" BASIS,
    #  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    #  See the License for the specific language governing permissions and
    #  limitations under the License.

    from test_helper import failed, passed, get_file_output, test_is_not_empty


    def test_output():
        output = get_file_output()

        answers = [
            'AUSTRALIA',
            'CHINA',
            'ENGLAND',
            'FRANCE',
            'GERMANY',
            'INDONESIA',
            'JAPAN',
            'MEXICO',
            'SINGAPORE',
            'UNITED STATES'
        ]

        if all(num in output for num in answers):
            passed()
        else:
            failed("Incorrect output. Convert each country name to uppercase.")


    if __name__ == '__main__':
        test_is_not_empty()
        test_output()
  learner_created: false
- name: countries.txt
  visible: true
  text: |
    Singapore
    United States
    Australia
    England
    France
    China
    Indonesia
    Mexico
    Germany
    Japan
  learner_created: false
status: Solved
feedback:
  message: Congratulations!
  time: Sat, 10 Jul 2021 16:51:59 UTC
record: -1
